# @Author            : Dario Gonzalez
# @Date              : 2020-02-23
# @Last Modified by  : Dario Gonzalez
# @Last Modified time: 2020-02-23

from abc import ABCMeta, abstractmethod


class IImage(object):

    __metaclass__ = ABCMeta

    @abstractmethod
    def open_img(self, img_file_name):
        raise NotImplementedError

    @abstractmethod
    def is_img_opened(self):
        raise NotImplementedError

    @abstractmethod
    def resize(self, width, height):
        raise NotImplementedError

    @abstractmethod
    def compress(self):
        raise NotImplementedError

    @abstractmethod
    def get_mimetype(self):
        raise NotImplementedError

    @abstractmethod
    def get_img_name(self):
        raise NotImplementedError

    @abstractmethod
    def set_img_name(self, img_name):
        raise NotImplementedError

    @abstractmethod
    def get_img_path(self):
        raise NotImplementedError

    @abstractmethod
    def set_img_path(self, img_path):
        raise NotImplementedError

    @abstractmethod
    def get_file_ext(self):
        raise NotImplementedError

    @abstractmethod
    def set_file_ext(self, file_ext):
        raise NotImplementedError

    @abstractmethod
    def get_width(self):
        raise NotImplementedError

    @abstractmethod
    def set_width(self, width):
        raise NotImplementedError

    @abstractmethod
    def get_height(self):
        raise NotImplementedError

    @abstractmethod
    def set_height(self, height):
        raise NotImplementedError
